#!/usr/bin/env bash

#
# Public: get_core() function for grav-core.sh get script.
#
function libgrav_core::get_core() { #-# Public: get_core() function for grav-core.sh get script.
   local _RC=0
   local _GRAV_CMD="${1}"
   local _GRAV_CORE="${2}"
   local _GRAV_NAME="${3}"

   local _GRAV_URL=""
   local _GRAV_DEV=""
   local _GRAV_PROD=""
   local _GRAV_OUTPUT=""
   local _GRAV_URL="https://getgrav.org/download"

   if [[ ! -d "${ROOT_DIR}/tmp/grav/core" ]]; then mkdir -p "${ROOT_DIR}/tmp/grav/core"; fi
   
   case "${_GRAV_CORE}" in
      all)
         "${0}" "${_GRAV_CMD}" dev "${_GRAV_NAME}"
         "${0}" "${_GRAV_CMD}" prod "${_GRAV_NAME}"
      ;;

      dev)
         _GRAV_DEV=$(cat "${CFG_DIR}"/.config.dev | tr -d '"' | cut -d'=' -f2)
         _GRAV_OUTPUT="${ROOT_DIR}/tmp/grav/core/${_GRAV_NAME}-${_GRAV_DEV}?testing.zip"
         if [[ -e "${_GRAV_OUTPUT}" ]]; then libgrav_common::error 2 "Error: File ${_GRAV_OUTPUT} exists,\ndownload not needed." "${NAME}"; fi

         wget -q --show-progress -O "${_GRAV_OUTPUT}" \
            ${_GRAV_URL}/core/${_GRAV_NAME}/${_GRAV_DEV}?testing
      ;;

      [0-9]*.[0-9]*.[0-9]*-[a-z][a-z].[0-9]*)
         _GRAV_OUTPUT="${ROOT_DIR}/tmp/grav/core/${_GRAV_NAME}-${_GRAV_CORE}?testing.zip"
         if [[ -e "${_GRAV_OUTPUT}" ]]; then libgrav_common::error 2 "Error: File ${_GRAV_OUTPUT} exists,\ndownload not needed." "${NAME}"; fi

         wget -q --show-progress -O "${_GRAV_OUTPUT}" \
            ${_GRAV_URL}/core/${_GRAV_NAME}/${_GRAV_CORE}?testing
      ;;

      prod)
         _GRAV_PROD=$(cat "${CFG_DIR}"/.config.prod | tr -d '"' | cut -d'=' -f2)
         _GRAV_OUTPUT="${ROOT_DIR}/tmp/grav/core/${_GRAV_NAME}-${_GRAV_PROD}.zip"
         if [[ -e "${_GRAV_OUTPUT}" ]]; then libgrav_common::error 2 "Error: File ${_GRAV_OUTPUT} exists,\ndownload not needed." "${NAME}"; fi

         wget -q --show-progress -O "${_GRAV_OUTPUT}" \
            ${_GRAV_URL}/core/${_GRAV_NAME}/${_GRAV_PROD}
      ;;
      
      [0-9]*.[0-9]*.[0-9]*)
         _GRAV_OUTPUT="${ROOT_DIR}/tmp/grav/core/${_GRAV_NAME}-${_GRAV_CORE}.zip"
         if [[ -e "${_GRAV_OUTPUT}" ]]; then libgrav_common::error 2 "Error: File ${_GRAV_OUTPUT} exists,\ndownload not needed." "${NAME}"; fi

         wget -q --show-progress -O "${_GRAV_OUTPUT}" \
            ${_GRAV_URL}/core/${_GRAV_NAME}/${_GRAV_CORE}
      ;;

      *) libgrav_common::error 2 "Error: Argument is not defined: ${_GRAV_CORE}!" "${NAME}"
      ;;

   esac

   _RC=$?

   if [ ${_RC} -eq 0 ]; then libgrav_common::help " Info: Download of ${_GRAV_NAME}-${_GRAV_CORE}.zip in ${ROOT_DIR} was successful." "${NAME}"; fi

   return ${_RC}
}

#
# Public: set_core() function for grav-core.sh set script.
#
function libgrav_core::set_core() { #-# Public: set_core() function for grav-core.sh set script.
   local _RC=0
   local _GRAV_CMD="${1}"
   local _GRAV_CORE="${2}"
   local _GRAV_NAME="${3}"

   case "${_GRAV_CORE}" in
      all)
         ${0} "${_GRAV_CMD}" dev "${_GRAV_NAME}"
         ${0} "${_GRAV_CMD}" prod "${_GRAV_NAME}"
      ;;

      dev) echo "GRAV_DEV=$(wget -q --show-progress -O - -o /dev/null https://getgrav.org | grep 'Release Candidate Version' | sed -e 's/<[^>]*>//g' | awk '{print $4}')" > "${CFG_DIR}"/.config.dev 
      ;;
          
      [0-9]*.[0-9]*.[0-9]*-[a-z][a-z].[0-9]*\?testing)
         echo "GRAV_DEV=${_GRAV_CORE}"  > "${CFG_DIR}"/.config.dev 
      ;;

      prod) echo "GRAV_PROD=$(wget -q --show-progress -O - -o /dev/null https://getgrav.org | grep 'Stable Version' | sed -e 's/<[^>]*>//g' | awk '{print $3}')"  > "${CFG_DIR}"/.config.prod 
      ;;
      
      [0-9]*.[0-9]*.[0-9]*)
         echo "GRAV_PROD=${_GRAV_CORE}"  > "${CFG_DIR}"/.config.prod 
      ;;

      *) libgrav_common::error 2 "Error: Argument is not defined: ${_GRAV_CORE}!" "${NAME}"
      ;;

   esac

   _RC=$?

   if [ ${_RC} -eq 0 ]; then libgrav_common::help " Info: Download now the respective grav core package with ${BIN_DIR}/grav-core.sh get" "${NAME}"; fi

   return ${_RC}
}

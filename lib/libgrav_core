#!/usr/bin/env bash

#
# Public: set_core() function for grav-core.sh set script.
#
libgrav_core::set_core() { # Public: set_core() function for grav-core.sh set script.
   local _RC=0
   local _GRAV_CORE="${1}"

   case "${_GRAV_CORE}" in
      all)
         ${0} dev
         ${0} prod
      ;;

      dev) echo "GRAV_DEV=$(wget -O - -o /dev/null https://getgrav.org | grep 'Release Candidate Version' | sed -e 's/<[^>]*>//g' | awk '{print $4}')" > "${CFG_DIR}"/.config.dev 
      ;;
          
      [0-9]*.[0-9]*.[0-9]*-[a-z][a-z].[0-9]*\?testing)
         echo "GRAV_DEV=${_GRAV_CORE}"  > "${CFG_DIR}"/.config.dev 
      ;;

      prod) echo "GRAV_PROD=$(wget -O - -o /dev/null https://getgrav.org | grep 'Stable Version' | sed -e 's/<[^>]*>//g' | awk '{print $3}')"  > "${CFG_DIR}"/.config.prod 
      ;;
      
      [0-9]*.[0-9]*.[0-9]*)
         echo "GRAV_PROD=${_GRAV_CORE}"  > "${CFG_DIR}"/.config.prod 
      ;;

      *) libgrav::error 2 "Error: Argument is not defined: ${_GRAV_CORE}!"
      ;;

   esac

   _RC=$?

   if [ ${_RC} -eq 0 ]; then libgrav::help " Info: Download now the respective grav core package with ${BIN_DIR}/grav-core.sh get"; fi

   return ${_RC}
}

#
# Public: get_core() function for grav-core.sh get script.
#
function libgrav_core::get_core() { # Public: get_core() function for grav-core.sh get script.
   local _RC=0
   local _GRAV_CORE="${1}"
   local _GRAV_NAME="${2}"

   local _GRAV_URL=""
   local _GRAV_DEV=""
   local _GRAV_PROD=""
   local _GRAV_OUTPUT=""
   local _GRAV_URL="https://getgrav.org/download"

   case "${_GRAV_CORE}" in
      all)
         ${0} dev ${_GRAV_NAME}
         ${0} prod ${_GRAV_NAME}
      ;;

      dev)
         _GRAV_DEV=$(cat "${CFG_DIR}"/.config.dev | tr -d '"' | cut -d'=' -f2)
         _GRAV_OUTPUT="${ROOT_DIR}/tmp/grav/core/${_GRAV_NAME}-${_GRAV_DEV}?testing.zip"
         if [[ -e "${_GRAV_OUTPUT}" ]]; then libgrav::error 2 "Error: File ${_GRAV_OUTPUT} exists, download not needed."; fi

         wget -O "${_GRAV_OUTPUT}" \
            ${_GRAV_URL}/core/${_GRAV_NAME}/${_GRAV_DEV}?testing
      ;;

      [0-9]*.[0-9]*.[0-9]*-[a-z][a-z].[0-9]*)
         _GRAV_OUTPUT="${ROOT_DIR}/tmp/grav/core/${_GRAV_NAME}-${_GRAV_CORE}?testing.zip"
         if [[ -e "${_GRAV_OUTPUT}" ]]; then libgrav::error 2 "Error: File ${_GRAV_OUTPUT} exists, download not needed."; fi

         wget -O "${_GRAV_OUTPUT}" \
            ${_GRAV_URL}/core/${_GRAV_NAME}/${_GRAV_CORE}?testing
      ;;

      prod)
         _GRAV_PROD=$(cat "${CFG_DIR}"/.config.prod | tr -d '"' | cut -d'=' -f2)
         _GRAV_OUTPUT="${ROOT_DIR}/tmp/grav/core/${_GRAV_NAME}-${_GRAV_PROD}.zip"
         if [[ -e "${_GRAV_OUTPUT}" ]]; then libgrav::error 2 "Error: File ${_GRAV_OUTPUT} exists, download not needed."; fi

         wget -O "${_GRAV_OUTPUT}" \
            ${_GRAV_URL}/core/${_GRAV_NAME}/${_GRAV_PROD}
      ;;
      
      [0-9]*.[0-9]*.[0-9]*)
         _GRAV_OUTPUT="${ROOT_DIR}/tmp/grav/core/${_GRAV_NAME}-${_GRAV_CORE}.zip"
         if [[ -e "${_GRAV_OUTPUT}" ]]; then libgrav::error 2 "Error: File ${_GRAV_OUTPUT} exists, download not needed."; fi

         wget -O "${_GRAV_OUTPUT}" \
            ${_GRAV_URL}/core/${_GRAV_NAME}/${_GRAV_CORE}
      ;;

      *) libgrav::error 2 "Error: Argument is not defined: ${_GRAV_CORE}!"
      ;;

   esac

   return ${_RC}
}

#!/usr/bin/env bash

#
# Public: build() function for grav_build.sh script.
#
function libgrav_docker::build() { # Public: build() function for grav_build.sh script.
   local _RC=0
   local _GRAV_USER="${1}"
   local _GRAV_NAME="${2}"
   local _GRAV_TAG="${3}"
   local _GRAV_PASS="${4}"
   local _GRAV_PRIV="${5}"
   local _GRAV_PUB="${6}"
   local _GRAV_DIST="${7}"
   local _GRAV_ARCH="${8}"
   local _GRAV_FILE="${9}"
   local _GRAV_KIND="${10}"
   local _GRAV_URLFILE="${11}"
   local _GRAV_URL="${12}"

   local _GRAV_CMD="${FUNCNAME[0]}"

   # sudo docker ps | grep "${_GRAV_NAME}" | awk '{print $1}' | xargs -r sudo docker rm -f
   # _RC=$?

   case "${_GRAV_CMD}" in
      "build")
         sudo docker buildx create \
            --name grav_builder \
            --node grav_builder0 \
            --platform linux/amd64 \
            --use
            
         sudo docker buildx "${_GRAV_CMD}" \
            --platform linux/amd64 \
            --progress=text \
            --load \
            --cache-from type=local,id=${_GRAV_NAME},src="${CACHE_DIR}"/.dcache \
            --cache-to type=local,id=${_GRAV_NAME},dest="${CACHE_DIR}"/.dcache \
            --secret id=grav_pwd.key,src="${_GRAV_PASS}" \
            --secret id=grav_rsa,src="${_GRAV_PRIV}" \
            --secret id=grav_rsa.pub,src="${_GRAV_PUB}" \
            --build-arg GRAV_NAME="${_GRAV_NAME}" \
            --build-arg GRAV_TAG="${_GRAV_TAG}" \
            --build-arg GRAV_USER="${_GRAV_USER}" \
            --build-arg GRAV_KIND="${_GRAV_KIND}" \
            --build-arg GRAV_URLFILE="${_GRAV_URLFILE}" \
            --build-arg GRAV_URL="${_GRAV_URL}" \
            --build-arg CACHE_DIR="${CACHE_DIR}" \
            --tag "${_GRAV_USER}"/"${_GRAV_NAME}":"${_GRAV_TAG}" \
            --file "${HOME_DIR}"/"${_GRAV_FILE}" \
            ${HOME_DIR}

         sudo docker tag \
            "${_GRAV_USER}"/"${_GRAV_NAME}":"${_GRAV_TAG}" \
            "${_GRAV_USER}"/"${_GRAV_NAME}":latest
      ;;

      *)
         libgrav::error 2 "FAIL: Buildx command not found: ${_GRAV_CMD}!"
      ;;
   esac
           
    _RC=$?


   return ${_RC}
}

#
# Public: purge() function for grav_prune.sh script.
#
function libgrav_docker::purge() { # Public: purge() function for grav_prune.sh script.
   local _RC=0
   local _GRAV_NAME="${1}"

   sudo rm -rf ${CACHE_DIR}/.ccache/*
   RC=$?
   sudo rm -rf ${CACHE_DIR}/.dcache/*
   RC=$?
   sudo rm -rf ${CACHE_DIR}/.phpcache/*
   RC=$?
   sudo docker rm -f buildx_buildkit_${_GRAV_NAME}_builder0
   RC=$?
   sudo docker ps -a | grep ${_GRAV_NAME} | awk '{print $1":"$2}' | xargs -r sudo docker rm -f
   RC=$?
   sudo docker images | grep ${_GRAV_NAME} | awk '{print $1":"$2}' | xargs -r sudo docker rmi -f
   RC=$?
   sudo docker volume prune -f
   RC=$?
   sudo docker system prune -f
   RC=$?
   sudo docker buildx prune -f
   RC=$?

   return ${_RC}
}

#
# Public: run() function for grav_run.sh script.
#
function libgrav_docker::run() { # Public: run() function for grav_run.sh script.
   local _GRAV_USER="${1}"
   local _GRAV_NAME="${2}"
   local _GRAV_TAG="${3}"
   local _GRAV_DATA="${4}"

   sudo docker ps -a | grep ${_GRAV_NAME} | awk '{print $1}' | xargs -r sudo docker rm -f
   sudo docker volume prune -f

   sudo docker run -d \
      --name ${_GRAV_NAME} \
      --hostname ${_GRAV_NAME}p01 \
      --restart always \
      --publish 0.0.0.0:8080:80/tcp \
      --publish 0.0.0.0:8443:443/tcp \
      --publish 0.0.0.0:2222:22/tcp \
      --mount type=volume,src=${_GRAV_DATA},dst=/var/www/html \
      ${_GRAV_USER}/${_GRAV_NAME}:${_GRAV_TAG}

      _RC=$?

   return ${_RC}
}

#
# Public: shell() function for grav_shell.sh script.
#
function libgrav_docker::shell() { # Public: shell() function for grav_shell.sh script.
   local _RC=0
   local _GRAV_NAME="${1}"
   local _GRAV_SHELL="${2}"

   sudo docker exec -ti \
      ${_GRAV_NAME} \
      ${_GRAV_SHELL}

   _RC=$?

   return ${_RC}
}
